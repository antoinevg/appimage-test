on:
  push:
  pull_request:
  workflow_dispatch:

name: CI

env:
  GTK_VERSION: 4.14.4

jobs:
  build-linux-appimage:
    permissions:
      contents: read

    needs: create-docker-image

    name: Build Linux AppImage
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/${{ needs.create-docker-image.outputs.NAME }}:${{ needs.create-docker-image.outputs.TAG }}
      # TODO image: ghcr.io/${{ github.repository }}-gtk-4.14.4:main
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Workaround issues when GitHub does not respect the HOME env var
        run: |
          # see: https://github.com/actions/checkout/issues/1014
          mv /home/runner/.cargo   $HOME
          mv /home/runner/.nvm     $HOME
          mv /home/runner/.rustup  $HOME

      - uses: Swatinem/rust-cache@v2

      - name: Install toolchain
        run: |
          rustup toolchain install stable
          rustup default stable

      - name: Build packetry binary
        run: |
          cargo build --release

      - name: Test under XVFB (Linux)
        run: |
          xvfb-run cargo test
        if: runner.os == 'Linux'

      - name: Run build-appimage action (Linux)
        uses: ./appimage/actions/build-appimage/
        with:
          executable:   ./target/release/packetry
          icon-file:    ./appimage/dist/icon.png
          desktop-file: ./appimage/dist/packetry.desktop

      - name: Upload AppImage binary (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: Linux AppImage binary
          path: |
            packetry-x86_64.AppImage
          if-no-files-found: error


  create-docker-image:
    needs: changed
    if: ${{ needs.changed.outputs.dockerfile == 'true' }}

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    name: Create Docker image
    runs-on: ubuntu-latest
    outputs:
      NAME: ${{ github.repository }}-gtk-${{ env.GTK_VERSION }}
      TAG:  ${{ github.ref_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: appimage/actions/build-appimage/docker/
          push: true
          tags: ghcr.io/${{ github.repository }}-gtk-${{ env.GTK_VERSION }}:${{ github.ref_name }}
          cache-from: type=gha, scope=${{ github.ref_name }}
          cache-to:   type=gha,  scope=${{ github.ref_name }}, mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository }}-gtk-${{ env.GTK_VERSION }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true


  changed:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      dockerfile: ${{ steps.filter.outputs.dockerfile }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            dockerfile:
              - "appimage/actions/build-appimage/docker/**"
